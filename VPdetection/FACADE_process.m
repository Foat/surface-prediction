function RES=   FACADE_process(ARGS,vALGO, im, num, vsEdges, vsEdges_GT,vCluster_GT)

    const = FACADE_const();
    
    RES.algo = {};

    currIdx = 1;
    
    for al = 1:length(vALGO)
        algo = vALGO{al};
        
        ARGS_cpy = ARGS;
        
        if ARGS.fixedrand
            rand('seed', seed);
            randn('seed', seed);
        end

        
        switch algo
            
          case 'GT'
            %-----------------------------------------------
            [RES,currIdx] =  FACADE_runAlgo(ARGS_cpy,...
                                 @(a,b,c) YorkGT(a,b,c,vsVP_GT),  'GT', currIdx, ...
                                 {},        {}, {},...
                                 vsEdges,...
                                 vsEdges_GT,  vCluster_GT,...
                                 im, ...
                                 num,...
                                 RES);
            %-----------------------------------------------
          case 'OrthoBF'
            ARGS_cpy.REF_remNonManhantan = false;
            ARGS_cpy.refine = false;
            [RES,currIdx] =  FACADE_runAlgo(ARGS_cpy,...
                                            @FACADE_getVP_OrthoBF,'BF', currIdx, ...
                                            @FACADE_getVP_EM,    'EM', currIdx+1,...
                                            vsEdges,...
                                            vsEdges_GT,  vCluster_GT,...
                                            im, ...
                                            num,...
                                            RES);
             %-----------------------------------------------
          case 'RandHOUGH'
            ARGS_cpy.REF_remNonManhantan = false;
            ARGS_cpy.GRIC_solveVP  = const.SOLVE_VP_MAX;
            [RES,currIdx] =  FACADE_runAlgo(ARGS_cpy,...
                                            @FACADE_getVP_randomHough,  'H', currIdx, ...
                                            @FACADE_getVP_EM,    'EM', currIdx+1,...
                                            vsEdges,...
                                            vsEdges_GT,  vCluster_GT,...
                                            im, ...
                                            num,...
                                            RES);
            %-----------------------------------------------
          case 'RND_GRIC'
            ARGS_cpy.REF_remNonManhantan = false;
            ARGS_cpy.GRIC_solveVP  = const.SOLVE_VP_MAX;
            [RES,currIdx] =  FACADE_runAlgo(ARGS_cpy,...
                                            @FACADE_getVP_RANSAC_GRIC,  'RND GRIC', currIdx, ...
                                            @FACADE_getVP_EM,    'EM', currIdx+1,...
                                            vsEdges,...
                                            vsEdges_GT,  vCluster_GT,...
                                            im, ...
                                            num,...
                                            RES);
               %-----------------------------------------------
          case 'GRIC'
            ARGS_cpy.REF_remNonManhantan = true;
            ARGS_cpy.GRIC_solveVP  = const.SOLVE_VP_MAX;
            [RES,currIdx] =  FACADE_runAlgo(ARGS_cpy,...
                                            @FACADE_getVP_GRIC,  'GRIC', currIdx, ...
                                            @FACADE_getVP_EM,    'EM', currIdx+1,...
                                            vsEdges,...
                                            vsEdges_GT,  vCluster_GT,...
                                            im, ...
                                            num,...
                                            RES);
                %-----------------------------------------------
          case 'GRIC_CALIB'
            ARGS_cpy.REF_remNonManhantan = true;
            ARGS_cpy.GRIC_solveVP  = const.SOLVE_VP_MAX;
            ARGS_cpy.ALL_calibrated = true;
            [RES,currIdx] =  FACADE_runAlgo(ARGS_cpy,...
                                            @FACADE_getVP_GRIC,  'calib GRIC', currIdx, ...
                                            @FACADE_getVP_EM,    'EM', currIdx+1,...
                                            vsEdges,...
                                            vsEdges_GT,  vCluster_GT,...
                                            im, ...
                                            num,...
                                            RES);
            %-----------------------------------------------
          case 'JLINKAGE'
            ARGS_cpy.REF_remNonManhantan = true;
            ARGS_cpy.JL_solveVP  = const.SOLVE_VP_MAX;
            [RES,currIdx] =  FACADE_runAlgo(ARGS_cpy,...
                                 @FACADE_getVP_JLinkage,  'JL', currIdx, ...
                                 @FACADE_getVP_EM,        'EM', currIdx+1,...
                                 vsEdges,...
                                 vsEdges_GT,  vCluster_GT,...
                                 im, ...
                                 num,...
                                 RES);
            
             %-----------------------------------------------
          case 'JLINKAGE_MLE'
            ARGS_cpy.JL_solveVP  = const.SOLVE_VP_MLE;
            
            [RES,currIdx] =  FACADE_runAlgo(ARGS_cpy,...
                                 @FACADE_getVP_JLinkage,  'MLE JL', currIdx, ...
                                 @FACADE_getVP_EM,        'EM', currIdx+1,...
                                 vsEdges,...
                                 vsEdges_GT,  vCluster_GT,...
                                 im, ...
                                 num,...
                                 RES);

            %-----------------------------------------------
            case 'JLINKAGE_GS'
              ARGS_cpy.JL_solveVP  = const.SOLVE_VP_GS;
              [RES,currIdx] =  FACADE_runAlgo(ARGS_cpy,...
                                   @FACADE_getVP_JLinkage,  'GS JL', currIdx, ...
                                   @FACADE_getVP_EM,        'EM', currIdx+1,...
                                   vsEdges,...
                                   vsEdges_GT,  vCluster_GT,...
                                   im, ...
                                   num,...
                                   RES);

           
             %-----------------------------------------------
          case 'JLINKAGE_CALIB'
            ARGS_cpy.ALL_calibrated = true;
            ARGS_cpy.REF_remNonManhantan = true;
            [RES,currIdx] =  FACADE_runAlgo(ARGS_cpy,...
                                 @FACADE_getVP_JLinkage,  'Calib JL', currIdx, ...
                                 @FACADE_getVP_EM,        'EM', currIdx+1,...
                                 vsEdges,...
                                 vsEdges_GT,  vCluster_GT,...
                                 im, ...
                                 num,...
                                 RES);
                                   
              %-----------------------------------------------
            case 'EM'
              ARGS_cpy.useGaussSphere = false;
              [RES,currIdx] =  FACADE_runAlgo(ARGS_cpy,...
                                   @FACADE_getVP_init_fusion,'',   currIdx, ...
                                   @FACADE_getVP_EM,         'EM', currIdx,... %same currIdx overwrite
                                   vsEdges,...
                                   vsEdges_GT,  vCluster_GT,...
                                   im, ...
                                   num,...
                                   RES);
              
              
              %-----------------------------------------------
            case 'EM_GS'
              ARGS_cpy.useGaussSphere = true;
              [RES,currIdx] =  FACADE_runAlgo(ARGS_cpy,...
                                   @FACADE_getVP_init_fusion,'',      currIdx, ...
                                   @FACADE_getVP_EM,         'GS EM', currIdx,... %same currIdx overwrite
                                   vsEdges,...
                                   vsEdges_GT,  vCluster_GT,...
                                   im, ...
                                   num,...
                                   RES);
              
              
               %-----------------------------------------------
            case 'EM_MLE'
              ARGS_cpy.useGaussSphere = false;
              ARGS_cpy.MLE = true;
              [RES,currIdx] =  FACADE_runAlgo(ARGS_cpy,...
                                   @FACADE_getVP_init_fusion,'',       currIdx, ...
                                   @FACADE_getVP_EM,         'MLE EM', currIdx,... %same idx overwrite
                                   vsEdges,...
                                   vsEdges_GT,  vCluster_GT,...
                                   im, ...
                                   num,...
                                   RES);
              
              
        end
    end
    
    
    
    return
    
function [vsVP_GT,vCluster] = YorkGT(vsEdges, im, ARGS, vsVP_GT)%, vCluster_GT)
    
    mErr = getMERR(vsVP_GT, vsEdges);
    [mn,vCluster] = min(mErr);
    
    vCluster(mn*ARGS.imgS > ARGS.ALL_pixelThreshold ) = length(vsVP_GT)+1;
    
%simply return GT
    return
    %--------------------------------------------------------------- 
    %---------------------------------------------------------------
    %---------------------------------------------------------------
   %-----------------------------------------------------
%-----------------------------------------------------
%-----------------------------------------------------
function mErr = getMERR(vsVP, vsEdges)

    mErr = zeros(length(vsVP), length(vsEdges) );
    nbVP = length(vsVP);
    
    vErr = cell(1,nbVP);
    for v=1:nbVP
        
        vErr{v} = FACADE_mxFitL_x_constVP(vsEdges,...
                                             vsVP(v).VP);
        
    end
    
    mErr = [vErr{:}]';
    
    return
